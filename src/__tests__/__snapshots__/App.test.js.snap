// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App component should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App>
        <IntlProvider
          defaultFormats={Object {}}
          defaultLocale="en"
          formats={Object {}}
          locale="en"
          messages={Object {}}
          onError={[Function]}
          textComponent={Symbol(react.fragment)}
        >
          <Suspense
            fallback={
              <Bullseye>
                <Spinner
                  size="xl"
                />
              </Bullseye>
            }
          >
            <Switch>
              <Route
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_init": [Function],
                    "_payload": Object {
                      "_result": Promise {},
                      "_status": 0,
                    },
                  }
                }
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                exact={true}
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/"
              />
            </Switch>
            <Bullseye>
              <div
                className="pf-l-bullseye"
              >
                <Spinner
                  size="xl"
                >
                  <span
                    aria-label="Contents"
                    aria-valuetext="Loading..."
                    className="pf-c-spinner pf-m-xl"
                    role="progressbar"
                  >
                    <span
                      className="pf-c-spinner__clipper"
                    />
                    <span
                      className="pf-c-spinner__lead-ball"
                    />
                    <span
                      className="pf-c-spinner__tail-ball"
                    />
                  </span>
                </Spinner>
              </div>
            </Bullseye>
          </Suspense>
        </IntlProvider>
      </App>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`App component should render correctly 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App>
        <IntlProvider
          defaultFormats={Object {}}
          defaultLocale="en"
          formats={Object {}}
          locale="en"
          messages={Object {}}
          onError={[Function]}
          textComponent={Symbol(react.fragment)}
        >
          <Suspense
            fallback={
              <Bullseye>
                <Spinner
                  size="xl"
                />
              </Bullseye>
            }
          >
            <Switch>
              <Route
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_init": [Function],
                    "_payload": Object {
                      "_result": [Function],
                      "_status": 1,
                    },
                  }
                }
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  }
                }
                exact={true}
                location={
                  Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/"
              />
            </Switch>
            <Bullseye>
              <div
                className="pf-l-bullseye"
              >
                <Spinner
                  size="xl"
                >
                  <span
                    aria-label="Contents"
                    aria-valuetext="Loading..."
                    className="pf-c-spinner pf-m-xl"
                    role="progressbar"
                  >
                    <span
                      className="pf-c-spinner__clipper"
                    />
                    <span
                      className="pf-c-spinner__lead-ball"
                    />
                    <span
                      className="pf-c-spinner__tail-ball"
                    />
                  </span>
                </Spinner>
              </div>
            </Bullseye>
          </Suspense>
        </IntlProvider>
      </App>
    </Router>
  </BrowserRouter>
</Provider>
`;
